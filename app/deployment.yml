---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website-server
  namespace: ${NAMESPACE}
  labels:
    app: website-server
spec:
  selector:
    matchLabels:
      app: website-server
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: website-server
    spec:
      imagePullSecrets:
        - name: pipeline-docker-registry
      containers:
      - name: website
        image: ${WEBSITE_IMAGE}
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: "WEBSITE_URL_APPLICATION"
          value: ${WEBSITE_URL_APPLICATION}
        - name: "WEBSITE_URL_GITHUB"
          value: ${WEBSITE_URL_GITHUB}
        - name: "WEBSITE_URL_YOUTUBE"
          value: ${WEBSITE_URL_YOUTUBE}
        - name: "WEBSITE_URL_LINKEDIN"
          value: ${WEBSITE_URL_LINKEDIN}
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: website-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: website-server
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ${NAMESPACE}
  name: website-ingress
  annotations:
    allow.http: "true"
spec:
  rules:
    - host: ${WEBSITE_DNS}
      http:
        paths:
          - path: /
            backend:
              serviceName: website-service
              servicePort: 80
