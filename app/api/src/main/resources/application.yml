server:
  port: ${API_PORT}
  servlet:
    context-path: /api

spring:
  application:
    name: ${API_NAME}
#  security:
#    basic:
#      enabled: true
#      path: /**
#      ignored: /health**,/info**,/metrics**,/trace**
#      user:
#        name: ${OAUTH_CLIENT_NAME}
#        password: ${OAUTH_CLIENT_SECRET}
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#          issuer-uri: ${KEYCLOAK_URL}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT_CONNECT}
    password: ${REDIS_PASSWORD}
  cache:
    type: ${CACHES_TYPE}
    cache-names: ${CACHES_NAME}
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: 'true'
        temp:
          use_jdbc_metadata_defaults: 'false'
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    jakarta:
      persistence:
        schema-generation:
          database:
            action: none
          scripts:
            action: none
            create-source: metadata
            create-target: ./api/src/main/resources/db/script/schema.sql
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT_CONNECT}/${DB_NAME}
    password: ${DB_PASS}
    username: ${DB_USER}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: '20000'
      idle-timeout: '10000'
      maximum-pool-size: '40'
      auto-commit: 'true'
      minimum-idle: '10'
  liquibase:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT_CONNECT}/${DB_NAME}
    password: ${DB_PASS}
    user: ${DB_USER}
    enabled: false
    change-log: classpath:db/changelog-master.yml
#    change-log: classpath:db_version/changelog-master.yml
    parameters:
      sql_user_name_1: ${DB_SQL_USER_NAME_1}
      sql_user_name_2: ${DB_SQL_USER_NAME_2}
      sql_user_name_3: ${DB_SQL_USER_NAME_3}
      sql_user_name_4: ${DB_SQL_USER_NAME_4}

logging:
  level:
    liquibase: INFO
    org:
      hibernate: INFO
      springframework:
        security: TRACE
        data: INFO

springdoc:
  swagger-ui:
    csrf:
      enabled: true
  api-docs:
    path: /api-docs

jwt:
  secret: ${JWT_SECRET}
  expiration_ms: ${JWT_EXPIRATION_TOKEN_MS}
  auth:
    converter:
      resource-id: ${KEYCLOAK_NAME}
      principal-attribute: principal_username

keycloak:
  url: ${KEYCLOAK_URL}
  name: ${KEYCLOAK_NAME}
  grant: ${KEYCLOAK_GRANT_TYPE}
  client:
    id: ${KEYCLOAK_CLIENT_ID}
    secret: ${KEYCLOAK_CLIENT_SECRET}

#oauth:
#  client:
#    secret: ${OAUTH_CLIENT_SECRET}
#    name: ${OAUTH_CLIENT_NAME}